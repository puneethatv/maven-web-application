pipeline{

agent any

tools {
  maven 'maven 3.8.5'
}

options {
  timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}

triggers {
  pollSCM ('* * * * *')
  //cron ('* * * * *')
}
stages{

//Checkout code state
stage('CheckoutCode'){
steps{
sendSlackNotifications("STARTED")
git branch: 'development', credentialsId: 'df09d42f-0045-4490-910d-9d0324019e93', url: 'https://github.com/puneethatv/maven-web-application.git'
}
}

//Build
stage('Build'){
steps{
sh "mvn clean package"
}
}

//Execute Sonarqube report
stage('ExecuteSonarQubeReport'){
steps{
sh "mvn clean sonar:sonar"
}
}

/*
//Upload Artifacts Into Nexus
stage('UploadArtifactsInNexus'){
steps{
sh "mvn clean deploy"
}
}

//Deploy application into Tomcat Server
stage('DeployApp'){
steps{
sshagent(['93475fe7-503d-4732-92b1-85565ed6669f']){
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.45.234:/opt/apache-tomcat-9.0.68/webapps"
}
}
}
*/

}//stages closing
post {
  
  success {
  sendSlackNotifications(currentBuild.result) 
  }
  failure {
    sendSlackNotifications(currentBuild.result)
  }
}
}//pipeline closing 

//Send Slacknotification to snippet / Function for Slacknotification

def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
